'''
Filter the stackoverflow dataset generated by main.py in lm_dataformat
Edit filter_logic to implement filtering of any meta dict sample
'''
from lm_dataformat import Reader, Archive
import os
import glob

curr_dir  = os.path.dirname(__file__)
out_folder = "{}/../../../suriyagwu/stackexchange/stackoverflow".format(curr_dir)
full_data_file = "{}/data_*stackoverflow.jsonl.zst".format(out_folder)

class FilterMeta:
    # currently implementing or of filter tags    
    def __init__(self):
        self.filter_tags = ['python']
        self.file_suffix = "_"+"_".join(self.filter_tags)
    
    def filter_logic(self,meta):    
        for tag in self.filter_tags:
            if tag in meta['tags']:
                return True
        return False
            
new_archive = Archive(out_folder)
filter_meta = FilterMeta()
num_accepted = 0
num_rejected = 0
for filename in glob.glob(full_data_file):
    # create a reader object for the file
    print("Filtering {}".format(filename))
    rdr = Reader(filename)
    # iterate over the samples in the file
    for doc, meta in rdr.stream_data(get_meta=True):
        if filter_meta.filter_logic(meta):
            # add the sample to the new archive
            new_archive.add_data(doc, meta)
            num_accepted += 1
        else:
            num_rejected += 1

filtered_data_file_name = "stackoverflow"+filter_meta.file_suffix
new_archive.commit(filtered_data_file_name)
print("##### Stats #####")
print(f"num_accepted: {num_accepted}, num_rejected: {num_rejected}")
